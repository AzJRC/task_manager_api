"""first

Revision ID: 83a522c538ca
Revises: 
Create Date: 2023-11-30 18:21:36.277427

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '83a522c538ca'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    user_group_roles = op.create_table('user_group_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )

    op.bulk_insert(user_group_roles,
        [
            {"id": 1, "role": "owner"},
            {"id": 2, "role": "admin"},
            {"id": 3, "role": "member"},
            {"id": 4, "role": "guest"}
        ]
    )

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('user_creation', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('valid_email', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('user_state', sa.Boolean(), server_default=sa.text('TRUE'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('task_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_name', sa.String(), nullable=False),
    sa.Column('group_description', sa.String(), nullable=True),
    sa.Column('group_creation', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('group_owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_name')
    )
    op.create_index(op.f('ix_task_groups_id'), 'task_groups', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('task_creation', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('task_owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_table('user_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_name', sa.String(), nullable=False),
    sa.Column('group_description', sa.String(), nullable=True),
    sa.Column('group_creation', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('group_owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_name')
    )
    op.create_index(op.f('ix_user_groups_id'), 'user_groups', ['id'], unique=False)
    op.create_table('task_assignments',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('task_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_group_id'], ['task_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_id', 'task_group_id')
    )
    op.create_table('user_group_members',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['user_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['user_group_roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('user_groups_task_groups',
    sa.Column('user_group_id', sa.Integer(), nullable=False),
    sa.Column('task_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_group_id'], ['task_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_group_id', 'task_group_id')
    )
    # ### end Alembic commands ###

    


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_groups_task_groups')
    op.drop_table('user_group_members')
    op.drop_table('task_assignments')
    op.drop_index(op.f('ix_user_groups_id'), table_name='user_groups')
    op.drop_table('user_groups')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_task_groups_id'), table_name='task_groups')
    op.drop_table('task_groups')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('user_group_roles')
    # ### end Alembic commands ###
